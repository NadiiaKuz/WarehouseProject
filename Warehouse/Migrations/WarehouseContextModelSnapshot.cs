// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warehouse.Database;

#nullable disable

namespace Warehouse.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    partial class WarehouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Warehouse.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Description = "Portable computers",
                            Name = "Laptops"
                        },
                        new
                        {
                            CategoryID = 2,
                            Description = "Desktop computers",
                            Name = "Desktops"
                        },
                        new
                        {
                            CategoryID = 3,
                            Description = "Handheld computers",
                            Name = "Tablets"
                        },
                        new
                        {
                            CategoryID = 4,
                            Description = "Display screens",
                            Name = "Monitors"
                        },
                        new
                        {
                            CategoryID = 5,
                            Description = "Document printers",
                            Name = "Printers"
                        },
                        new
                        {
                            CategoryID = 6,
                            Description = "Storage devices",
                            Name = "Storage"
                        },
                        new
                        {
                            CategoryID = 7,
                            Description = "Networking equipment",
                            Name = "Networking"
                        },
                        new
                        {
                            CategoryID = 8,
                            Description = "Computer accessories",
                            Name = "Accessories"
                        },
                        new
                        {
                            CategoryID = 9,
                            Description = "Computer software",
                            Name = "Software"
                        },
                        new
                        {
                            CategoryID = 10,
                            Description = "Computer games",
                            Name = "Games"
                        });
                });

            modelBuilder.Entity("Warehouse.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "Address 1",
                            ContactInfo = "contact1@example.com",
                            Name = "Customer 1"
                        },
                        new
                        {
                            CustomerID = 2,
                            Address = "Address 2",
                            ContactInfo = "contact2@example.com",
                            Name = "Customer 2"
                        },
                        new
                        {
                            CustomerID = 3,
                            Address = "Address 3",
                            ContactInfo = "contact3@example.com",
                            Name = "Customer 3"
                        },
                        new
                        {
                            CustomerID = 4,
                            Address = "Address 4",
                            ContactInfo = "contact4@example.com",
                            Name = "Customer 4"
                        },
                        new
                        {
                            CustomerID = 5,
                            Address = "Address 5",
                            ContactInfo = "contact5@example.com",
                            Name = "Customer 5"
                        },
                        new
                        {
                            CustomerID = 6,
                            Address = "Address 6",
                            ContactInfo = "contact6@example.com",
                            Name = "Customer 6"
                        },
                        new
                        {
                            CustomerID = 7,
                            Address = "Address 7",
                            ContactInfo = "contact7@example.com",
                            Name = "Customer 7"
                        },
                        new
                        {
                            CustomerID = 8,
                            Address = "Address 8",
                            ContactInfo = "contact8@example.com",
                            Name = "Customer 8"
                        },
                        new
                        {
                            CustomerID = 9,
                            Address = "Address 9",
                            ContactInfo = "contact9@example.com",
                            Name = "Customer 9"
                        },
                        new
                        {
                            CustomerID = 10,
                            Address = "Address 10",
                            ContactInfo = "contact10@example.com",
                            Name = "Customer 10"
                        });
                });

            modelBuilder.Entity("Warehouse.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CustomerID = 1,
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            OrderID = 2,
                            CustomerID = 1,
                            OrderDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            OrderID = 3,
                            CustomerID = 2,
                            OrderDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            OrderID = 4,
                            CustomerID = 3,
                            OrderDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            OrderID = 5,
                            CustomerID = 4,
                            OrderDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            OrderID = 6,
                            CustomerID = 4,
                            OrderDate = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            OrderID = 7,
                            CustomerID = 5,
                            OrderDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            OrderID = 8,
                            CustomerID = 6,
                            OrderDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            OrderID = 9,
                            CustomerID = 7,
                            OrderDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            OrderID = 10,
                            CustomerID = 8,
                            OrderDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        });
                });

            modelBuilder.Entity("Warehouse.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            OrderID = 1,
                            PricePerItem = 1000.00m,
                            ProductID = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 2,
                            OrderID = 1,
                            PricePerItem = 1500.00m,
                            ProductID = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 3,
                            OrderID = 2,
                            PricePerItem = 1200.00m,
                            ProductID = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 4,
                            OrderID = 3,
                            PricePerItem = 2000.00m,
                            ProductID = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 5,
                            OrderID = 3,
                            PricePerItem = 500.00m,
                            ProductID = 5,
                            Quantity = 3
                        },
                        new
                        {
                            OrderDetailID = 18,
                            OrderID = 3,
                            PricePerItem = 750.00m,
                            ProductID = 6,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 19,
                            OrderID = 3,
                            PricePerItem = 300.00m,
                            ProductID = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 6,
                            OrderID = 4,
                            PricePerItem = 750.00m,
                            ProductID = 6,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 7,
                            OrderID = 5,
                            PricePerItem = 300.00m,
                            ProductID = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 8,
                            OrderID = 5,
                            PricePerItem = 200.00m,
                            ProductID = 8,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 9,
                            OrderID = 6,
                            PricePerItem = 100.00m,
                            ProductID = 9,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 10,
                            OrderID = 7,
                            PricePerItem = 150.00m,
                            ProductID = 10,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 11,
                            OrderID = 7,
                            PricePerItem = 1000.00m,
                            ProductID = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 20,
                            OrderID = 7,
                            PricePerItem = 1500.00m,
                            ProductID = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 21,
                            OrderID = 7,
                            PricePerItem = 1200.00m,
                            ProductID = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 12,
                            OrderID = 8,
                            PricePerItem = 1500.00m,
                            ProductID = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 13,
                            OrderID = 8,
                            PricePerItem = 1200.00m,
                            ProductID = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 22,
                            OrderID = 8,
                            PricePerItem = 2000.00m,
                            ProductID = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 14,
                            OrderID = 9,
                            PricePerItem = 2000.00m,
                            ProductID = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 15,
                            OrderID = 9,
                            PricePerItem = 500.00m,
                            ProductID = 5,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 23,
                            OrderID = 9,
                            PricePerItem = 750.00m,
                            ProductID = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 24,
                            OrderID = 9,
                            PricePerItem = 300.00m,
                            ProductID = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 16,
                            OrderID = 10,
                            PricePerItem = 750.00m,
                            ProductID = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 17,
                            OrderID = 10,
                            PricePerItem = 300.00m,
                            ProductID = 7,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 25,
                            OrderID = 10,
                            PricePerItem = 200.00m,
                            ProductID = 8,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Warehouse.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryID = 1,
                            Description = "Description 1",
                            Name = "Laptop 1",
                            Price = 1000.00m,
                            QuantityInStock = 10
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryID = 1,
                            Description = "Description 2",
                            Name = "Laptop 2",
                            Price = 1500.00m,
                            QuantityInStock = 5
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryID = 2,
                            Description = "Description 3",
                            Name = "Desktop 1",
                            Price = 1200.00m,
                            QuantityInStock = 7
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryID = 2,
                            Description = "Description 4",
                            Name = "Desktop 2",
                            Price = 2000.00m,
                            QuantityInStock = 6
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryID = 3,
                            Description = "Description 5",
                            Name = "Tablet 1",
                            Price = 500.00m,
                            QuantityInStock = 15
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryID = 3,
                            Description = "Description 6",
                            Name = "Tablet 2",
                            Price = 750.00m,
                            QuantityInStock = 8
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryID = 4,
                            Description = "Description 7",
                            Name = "Monitor 1",
                            Price = 300.00m,
                            QuantityInStock = 12
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryID = 5,
                            Description = "Description 8",
                            Name = "Printer 1",
                            Price = 200.00m,
                            QuantityInStock = 10
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryID = 6,
                            Description = "Description 9",
                            Name = "External Hard Drive",
                            Price = 100.00m,
                            QuantityInStock = 20
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryID = 7,
                            Description = "Description 10",
                            Name = "Wireless Router",
                            Price = 150.00m,
                            QuantityInStock = 10
                        });
                });

            modelBuilder.Entity("Warehouse.Models.Order", b =>
                {
                    b.HasOne("Warehouse.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Warehouse.Models.OrderDetail", b =>
                {
                    b.HasOne("Warehouse.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Warehouse.Models.Product", b =>
                {
                    b.HasOne("Warehouse.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Warehouse.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Warehouse.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Warehouse.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Warehouse.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
